To create an email sender in Python, you can use the built-in smtplib library, which allows you to connect to an SMTP (Simple Mail Transfer Protocol) server and send emails. Here's an example of how you can create an email sender using Python:

python
Copy code
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def send_email(sender_email, sender_password, receiver_email, subject, message):
    # Set up the SMTP server
    smtp_server = 'smtp.example.com'  # Replace with your SMTP server address
    smtp_port = 587  # Replace with the SMTP server port (if different)

    # Create a multipart message
    email_message = MIMEMultipart()
    email_message['From'] = sender_email
    email_message['To'] = receiver_email
    email_message['Subject'] = subject

    # Attach the message to the email
    email_message.attach(MIMEText(message, 'plain'))

    try:
        # Log in to the SMTP server
        smtp_obj = smtplib.SMTP(smtp_server, smtp_port)
        smtp_obj.starttls()  # Enable TLS encryption
        smtp_obj.login(sender_email, sender_password)

        # Send the email
        smtp_obj.sendmail(sender_email, receiver_email, email_message.as_string())
        print('Email sent successfully!')

    except smtplib.SMTPException as e:
        print('An error occurred while sending the email:', str(e))

    finally:
        # Close the SMTP connection
        smtp_obj.quit()

# Example usage
sender_email = 'your_email@example.com'
sender_password = 'your_email_password'
receiver_email = 'recipient@example.com'
subject = 'Hello from Python!'
message = 'This is a test email sent from Python.'

send_email(sender_email, sender_password, receiver_email, subject, message)
Make sure to replace 'smtp.example.com', 587, 'your_email@example.com', and 'your_email_password' with the appropriate values for your email provider. Also, replace 'recipient@example.com' with the email address of the recipient you want to send the email to.

Note: Some email providers may require you to enable "less secure apps" or generate an application-specific password to use their SMTP servers. Consult your email provider's documentation for more information.

With this code, you should be able to send an email using Python.
